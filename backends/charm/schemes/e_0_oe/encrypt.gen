# BEGIN ENCRYPT
for j in LSSS_ROWS:
    idx = ""
    idx += "s"
    idx += "_{"
    j_local_0 = LSSS_map[j].tau
    idx += str(j_local_0)
    idx += "}"
    non_lone_randoms[idx] = self.sample_z()
    CT['bold_s_g'][idx] = self.lift_g(non_lone_randoms[idx])
idx = ""
idx += "<secret>"
idx += "_{"
idx += "}"
non_lone_randoms[idx] = self.get_secret()
CT['bold_s_g'][idx] = self.lift_g(non_lone_randoms[idx])
for j in LSSS_ROWS:
    tmp_z = self.reset_z()
    acc_z = self.reset_z()
    tmp_g = self.reset_g()
    acc_g = self.reset_g()
    acc_g = self.lift_g(acc_z)
    tmp_z = self.set_z(1)
    aux_z = self.get_share(j)
    tmp_z = tmp_z * aux_z
    idx = ""
    idx += "b"
    idx += "_{"
    idx += "}"
    tmp_g = MPK['b_g'][idx]
    tmp_g = tmp_g ** tmp_z
    acc_g = acc_g * tmp_g
    tmp_z = self.set_z(1)
    idx = ""
    idx += "s"
    idx += "_{"
    j_local_0 = LSSS_map[j].tau
    idx += str(j_local_0)
    idx += "}"
    tmp_z = tmp_z * non_lone_randoms[idx]
    idx = ""
    idx += "b"
    idx += "_{"
    j_local_1 = LSSS_map[j].attr_repr.value
    idx += self.string_of_attribute(j_local_1)
    idx += "}"
    tmp_g = MPK['b_g'][idx]
    tmp_g = tmp_g ** tmp_z
    acc_g = acc_g * tmp_g
    idx = ""
    idx += "c"
    idx += "_{"
    idx += str(j)
    idx += "}"
    CT['bold_C_g'][idx] = acc_g
tmp_z = self.reset_z()
acc_z = self.reset_z()
tmp_gt = self.reset_gt()
acc_gt = self.reset_gt()
acc_gt = self.lift_gt(acc_z)
tmp_z = self.set_z(1)
idx = ""
idx += "alpha"
idx += "_{"
idx += "}"
tmp_gt = MPK['alpha'][idx]
aux_z = self.get_secret()
tmp_z = tmp_z * aux_z
tmp_gt = tmp_gt ** tmp_z
acc_gt = acc_gt * tmp_gt
CT['C'] = acc_gt
# END ENCRYPT