# BEGIN KEYGEN
idx = ""
idx += "r"
idx += "_{"
idx += "}"
non_lone_randoms[idx] = self.sample_z()
SK['r_h'][idx] = self.lift_h(non_lone_randoms[idx])
tmp_z = self.reset_z()
acc_z = self.reset_z()
tmp_z = self.set_z(1)
idx = ""
idx += "alpha"
idx += "_{"
idx += "}"
tmp_z = tmp_z * MSK['alpha'][idx]
acc_z = acc_z + tmp_z
tmp_z = self.set_z(1)
idx = ""
idx += "r"
idx += "_{"
idx += "}"
tmp_z = tmp_z * non_lone_randoms[idx]
idx = ""
idx += "b"
idx += "_{"
idx += "}"
tmp_z = tmp_z * MSK['b'][idx]
acc_z = acc_z + tmp_z
acc_h = self.lift_h(acc_z)
idx = ""
idx += "k"
idx += "_{"
idx += "0"
idx += ","
idx += "0"
idx += "}"
SK['k_h'][idx] = acc_h
for x in USER_ATTRIBUTES:
    tmp_z = self.reset_z()
    acc_z = self.reset_z()
    tmp_z = self.set_z(1)
    idx = ""
    idx += "r"
    idx += "_{"
    idx += "}"
    tmp_z = tmp_z * non_lone_randoms[idx]
    idx = ""
    idx += "b"
    idx += "_{"
    idx += self.string_of_attribute(x)
    idx += "}"
    tmp_z = tmp_z * MSK['b'][idx]
    acc_z = acc_z + tmp_z
    acc_h = self.lift_h(acc_z)
    idx = ""
    idx += "k"
    idx += "_{"
    idx += self.string_of_attribute(x)
    idx += "}"
    SK['k_h'][idx] = acc_h
# END KEYGEN