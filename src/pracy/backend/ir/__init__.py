"""
The Ir module provides types and functions to represent, create and manipulate
programs using pracys internal IR (intermediate representation).

Programs are represented as (sequences of) `IrStmt` objects.
To construct programs, use the `IrBuilder` which provides a more high-level
API then manually building up programs.
"""

from pracy.backend.ir.irexpr import Call, IntLiteral, IrExpr, Read, StringLiteral
from pracy.backend.ir.irfunc import IrFunc
from pracy.backend.ir.irstmt import (
    AddG,
    AddGt,
    AddH,
    AddZ,
    Alloc,
    AppendIndex,
    AppendIndexLiteral,
    Comment,
    FdhG,
    FdhH,
    GetEpsilon,
    GetLambda,
    GetMu,
    GetRgidG,
    GetRgidH,
    GetSecret,
    GetXAttr,
    GetXAttrAlt,
    InvGt,
    InvZ,
    IrStmt,
    LiftG,
    LiftGt,
    LiftH,
    Loop,
    MulZ,
    NegZ,
    Pair,
    ResetG,
    ResetGt,
    ResetH,
    ResetZ,
    SampleZ,
    ScaleG,
    ScaleGt,
    ScaleH,
    SetIndex,
    SetZ,
    Store,
    StoreExpr,
)
from pracy.backend.ir.irtype import IrType
from pracy.backend.ir.irvar import (
    ACC_G,
    ACC_GT,
    ACC_H,
    ACC_Z,
    AUX_Z,
    BLINDING_POLY,
    CT_BLINDING_POLY,
    CT_PRIMARIES_G,
    CT_PRIMARIES_H,
    CT_RANDOMS_G,
    CT_RANDOMS_H,
    CT_SECONDARIES,
    ENCRYPT_LONE_RANDOMS,
    ENCRYPT_NON_LONE_RANDOMS,
    ENCRYPT_SPECIAL_LONE_RANDOMS,
    IDX,
    KEYGEN_LONE_RANDOMS,
    KEYGEN_NON_LONE_RANDOMS,
    MPK_ALPHAS,
    MPK_COMMON_VARS_G,
    MPK_COMMON_VARS_H,
    MSK_ALPHAS,
    MSK_COMMON_VARS,
    TMP_G,
    TMP_GT,
    TMP_H,
    TMP_Z,
    USK_POLYS_G,
    USK_POLYS_H,
    USK_RANDOMS_G,
    USK_RANDOMS_H,
    IrVar,
)
